<Application x:Class="SkinHunterWPF.App"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:converters="clr-namespace:SkinHunterWPF.Converters">
    <Application.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
            </ResourceDictionary.MergedDictionaries>

            <Color x:Key="BaseBackgroundColorValue">#1E1E1E</Color>
            <Color x:Key="BaseForegroundColorValue">#E0E0E0</Color>
            <Color x:Key="BaseAccentColorValue">#007ACC</Color>
            <Color x:Key="BaseCardBackgroundColorValue">#282828</Color>
            <Color x:Key="BaseSubtleBorderColorValue">#3A3A3A</Color>
            <Color x:Key="BaseHoverBackgroundColorValue">#333333</Color>

            <SolidColorBrush x:Key="WindowBackgroundColor" Color="{StaticResource BaseBackgroundColorValue}"/>
            <SolidColorBrush x:Key="HeaderBackgroundColor" Color="#181818"/>
            <SolidColorBrush x:Key="BorderAccentColor" Color="{StaticResource BaseAccentColorValue}"/>
            <SolidColorBrush x:Key="ForegroundColor" Color="{StaticResource BaseForegroundColorValue}"/>
            <SolidColorBrush x:Key="ForegroundLightGray" Color="#B0B0B0"/>
            <SolidColorBrush x:Key="ForegroundGray" Color="#888888"/>
            <SolidColorBrush x:Key="CardBackgroundColor" Color="{StaticResource BaseCardBackgroundColorValue}"/>
            <SolidColorBrush x:Key="CardBorderColor" Color="{StaticResource BaseSubtleBorderColorValue}"/>
            <SolidColorBrush x:Key="ButtonPrimaryBrush" Color="{StaticResource BaseAccentColorValue}"/>
            <SolidColorBrush x:Key="ButtonDefaultBrush" Color="#383838"/>
            <SolidColorBrush x:Key="ButtonHoverBrush" Color="{StaticResource BaseHoverBackgroundColorValue}"/>
            <SolidColorBrush x:Key="ButtonDisabledBrush" Color="#2A2A2A"/>
            <SolidColorBrush x:Key="ScrollBarBackgroundBrush" Color="#252525"/>
            <SolidColorBrush x:Key="ScrollBarThumbBrush" Color="#505050"/>
            <SolidColorBrush x:Key="ScrollBarThumbHoverBrush" Color="#686868"/>

            <BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter"/>
            <converters:NullOrEmptyToVisibilityConverter x:Key="NullOrEmptyToVisibilityConverter"/>
            <converters:NullToVisibilityConverter x:Key="NullToVisibilityConverter"/>
            <converters:InverseBooleanToVisibilityConverter x:Key="InverseBooleanToVisibilityConverter"/>
            <converters:ChromaToButtonTextConverter x:Key="ChromaToButtonTextConverter"/>
            <converters:SkinIdToKhadaUrlConverter x:Key="SkinIdToKhadaUrlConverter"/>
            <converters:ListToStringConverter x:Key="ListToStringConverter"/>

            <Style TargetType="Button">
                <Setter Property="Foreground" Value="{StaticResource ForegroundColor}"/>
                <Setter Property="Background" Value="{StaticResource ButtonDefaultBrush}"/>
                <Setter Property="BorderBrush" Value="{StaticResource CardBorderColor}"/>
                <Setter Property="BorderThickness" Value="1"/>
                <Setter Property="Padding" Value="10,6"/>
                <Setter Property="Cursor" Value="Hand"/>
                <Setter Property="SnapsToDevicePixels" Value="True"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="Button">
                            <Border x:Name="border"
                                     Background="{TemplateBinding Background}"
                                     BorderBrush="{TemplateBinding BorderBrush}"
                                     BorderThickness="{TemplateBinding BorderThickness}"
                                     CornerRadius="3">
                                <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center" Margin="{TemplateBinding Padding}"/>
                            </Border>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsMouseOver" Value="True">
                                    <Setter TargetName="border" Property="Background" Value="{StaticResource ButtonHoverBrush}"/>
                                    <Setter Property="BorderBrush" Value="{StaticResource BorderAccentColor}"/>
                                </Trigger>
                                <Trigger Property="IsPressed" Value="True">
                                    <Setter TargetName="border" Property="Background" Value="{StaticResource BorderAccentColor}"/>
                                    <Setter Property="BorderBrush" Value="{StaticResource BorderAccentColor}"/>
                                </Trigger>
                                <Trigger Property="IsEnabled" Value="False">
                                    <Setter TargetName="border" Property="Background" Value="{StaticResource ButtonDisabledBrush}"/>
                                    <Setter Property="BorderBrush" Value="#404040"/>
                                    <Setter TargetName="border" Property="Opacity" Value="0.6"/>
                                    <Setter Property="Foreground" Value="{StaticResource ForegroundGray}"/>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <Style x:Key="TitleBarButtonStyle" TargetType="Button">
                <Setter Property="Background" Value="Transparent"/>
                <Setter Property="BorderThickness" Value="0"/>
                <Setter Property="Width" Value="46"/>
                <Setter Property="Height" Value="35"/>
                <Setter Property="Padding" Value="0"/>
                <Setter Property="VerticalAlignment" Value="Center"/>
                <Setter Property="Foreground" Value="{StaticResource ForegroundGray}"/>
                <Setter Property="WindowChrome.IsHitTestVisibleInChrome" Value="True"/>
                <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="Button">
                            <Border x:Name="border" Background="{TemplateBinding Background}" SnapsToDevicePixels="true" CornerRadius="3">
                                <ContentPresenter x:Name="contentPresenter" HorizontalAlignment="Center" VerticalAlignment="Center" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                            </Border>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsMouseOver" Value="True">
                                    <Setter TargetName="border" Property="Background" Value="#44AAAAAA"/>
                                    <Setter Property="Foreground" Value="{StaticResource ForegroundLightGray}"/>
                                </Trigger>
                                <Trigger Property="IsPressed" Value="True">
                                    <Setter TargetName="border" Property="Background" Value="#66999999"/>
                                    <Setter Property="Foreground" Value="{StaticResource ForegroundColor}"/>
                                </Trigger>
                                <Trigger Property="IsEnabled" Value="False">
                                    <Setter Property="Opacity" Value="0.5"/>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <Style x:Key="CloseButtonStyle" TargetType="Button" BasedOn="{StaticResource TitleBarButtonStyle}">
                <Style.Triggers>
                    <Trigger Property="IsMouseOver" Value="True">
                        <Setter Property="Background" Value="#E81123"/>
                        <Setter Property="Foreground" Value="White"/>
                    </Trigger>
                    <Trigger Property="IsPressed" Value="True">
                        <Setter Property="Background" Value="#F1707A"/>
                        <Setter Property="Foreground" Value="White"/>
                    </Trigger>
                </Style.Triggers>
            </Style>

            <Style x:Key="ButtonIconOnlyStyle" TargetType="Button">
                <Setter Property="Background" Value="Transparent"/>
                <Setter Property="BorderThickness" Value="0"/>
                <Setter Property="Padding" Value="5"/>
                <Setter Property="VerticalAlignment" Value="Center"/>
                <Setter Property="HorizontalAlignment" Value="Center"/>
                <Setter Property="Foreground" Value="{StaticResource ForegroundGray}"/>
                <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
                <Setter Property="Cursor" Value="Hand"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="Button">
                            <Border x:Name="border" Background="{TemplateBinding Background}" SnapsToDevicePixels="true" CornerRadius="4">
                                <ContentPresenter x:Name="contentPresenter" HorizontalAlignment="Center" VerticalAlignment="Center" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                            </Border>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsMouseOver" Value="True">
                                    <Setter TargetName="border" Property="Background" Value="#44666666"/>
                                    <Setter Property="Foreground" Value="{StaticResource ForegroundLightGray}"/>
                                </Trigger>
                                <Trigger Property="IsPressed" Value="True">
                                    <Setter TargetName="border" Property="Background" Value="#66555555"/>
                                    <Setter Property="Foreground" Value="{StaticResource ForegroundColor}"/>
                                </Trigger>
                                <Trigger Property="IsEnabled" Value="False">
                                    <Setter Property="Opacity" Value="0.5"/>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <Style x:Key="ChampionGridButtonStyle" TargetType="Button">
                <Setter Property="Background" Value="Transparent"/>
                <Setter Property="BorderThickness" Value="0"/>
                <Setter Property="Padding" Value="0"/>
                <Setter Property="Cursor" Value="Hand"/>
                <Setter Property="Margin" Value="4"/>
                <Setter Property="Width" Value="100"/>
                <Setter Property="Height" Value="110"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="Button">
                            <Border x:Name="Bd" Height="110" Background="{TemplateBinding Background}" Padding="{TemplateBinding Padding}" CornerRadius="3">
                                <ContentPresenter/>
                            </Border>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsMouseOver" Value="True">
                                    <Setter TargetName="Bd" Property="Background" Value="{StaticResource ButtonHoverBrush}"/>
                                </Trigger>
                                <Trigger Property="IsPressed" Value="True">
                                    <Setter TargetName="Bd" Property="Background" Value="{StaticResource BorderAccentColor}"/>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <Style x:Key="ButtonTransparentStyle" TargetType="Button">
                <Setter Property="Background" Value="Transparent"/>
                <Setter Property="BorderThickness" Value="0"/>
                <Setter Property="Padding" Value="0"/>
                <Setter Property="Cursor" Value="Hand"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="Button">
                            <Border Background="{TemplateBinding Background}" Padding="{TemplateBinding Padding}" x:Name="Bd">
                                <ContentPresenter/>
                            </Border>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsMouseOver" Value="True">
                                    <Setter TargetName="Bd" Property="Effect">
                                        <Setter.Value>
                                            <DropShadowEffect ShadowDepth="0" Color="{StaticResource BaseAccentColorValue}" Opacity="0.5" BlurRadius="8"/>
                                        </Setter.Value>
                                    </Setter>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <Style x:Key="ButtonPrimaryStyle" TargetType="Button" BasedOn="{StaticResource {x:Type Button}}">
                <Setter Property="Background" Value="{StaticResource ButtonPrimaryBrush}"/>
                <Setter Property="BorderBrush" Value="{StaticResource ButtonPrimaryBrush}"/>
                <Setter Property="Foreground" Value="White"/>
            </Style>

            <Style x:Key="CardBorderStyle" TargetType="Border">
                <Setter Property="Background" Value="{StaticResource CardBackgroundColor}"/>
                <Setter Property="BorderBrush" Value="{StaticResource CardBorderColor}"/>
                <Setter Property="BorderThickness" Value="1"/>
                <Setter Property="CornerRadius" Value="4"/>
                <Setter Property="Padding" Value="5"/>
            </Style>

            <Style x:Key="LoadingProgressBarStyle" TargetType="ProgressBar">
                <Setter Property="IsIndeterminate" Value="True"/>
                <Setter Property="Width" Value="40"/>
                <Setter Property="Height" Value="40"/>
                <Setter Property="VerticalAlignment" Value="Center"/>
                <Setter Property="HorizontalAlignment" Value="Center"/>
                <Setter Property="BorderThickness" Value="0"/>
                <Setter Property="Foreground" Value="{StaticResource BorderAccentColor}"/>
                <Setter Property="Background" Value="Transparent"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="ProgressBar" >
                            <Grid>
                                <Ellipse Stroke="{TemplateBinding Foreground}" StrokeThickness="3" Opacity="0.2"/>
                                <Path Name="PART_Indicator" Stroke="{TemplateBinding Foreground}" StrokeThickness="3" StrokeStartLineCap="Round" StrokeEndLineCap="Round"
                                      Data="M20,2 A18,18 0 0 1 38,20">
                                    <Path.RenderTransform>
                                        <RotateTransform Angle="0" CenterX="20" CenterY="20" />
                                    </Path.RenderTransform>
                                    <Path.Triggers>
                                        <EventTrigger RoutedEvent="Loaded">
                                            <BeginStoryboard>
                                                <Storyboard>
                                                    <DoubleAnimation Storyboard.TargetName="PART_Indicator" Storyboard.TargetProperty="(UIElement.RenderTransform).(RotateTransform.Angle)" From="0" To="360" Duration="0:0:1.2" RepeatBehavior="Forever"/>
                                                </Storyboard>
                                            </BeginStoryboard>
                                        </EventTrigger>
                                    </Path.Triggers>
                                </Path>
                            </Grid>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <Style TargetType="TabControl">
                <Setter Property="Background" Value="Transparent"/>
                <Setter Property="BorderThickness" Value="0"/>
                <Setter Property="Padding" Value="0"/>
            </Style>

            <Style TargetType="TabItem">
                <Setter Property="Foreground" Value="{StaticResource ForegroundLightGray}"/>
                <Setter Property="Background" Value="Transparent"/>
                <Setter Property="Padding" Value="12,6"/>
                <Setter Property="BorderThickness" Value="0 0 0 2"/>
                <Setter Property="BorderBrush" Value="Transparent"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="TabItem">
                            <Border x:Name="border"
                                     BorderThickness="{TemplateBinding BorderThickness}"
                                     BorderBrush="{TemplateBinding BorderBrush}"
                                     Background="{TemplateBinding Background}"
                                     Padding="{TemplateBinding Padding}"
                                     Margin="0,0,8,0" CornerRadius="3,3,0,0">
                                <ContentPresenter ContentSource="Header"
                                                   HorizontalAlignment="Center"
                                                   VerticalAlignment="Center"/>
                            </Border>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsSelected" Value="True">
                                    <Setter Property="Foreground" Value="{StaticResource ForegroundColor}"/>
                                    <Setter TargetName="border" Property="BorderBrush" Value="{StaticResource BorderAccentColor}"/>
                                </Trigger>
                                <Trigger Property="IsMouseOver" Value="True">
                                    <Setter Property="Foreground" Value="{StaticResource ForegroundColor}"/>
                                    <Setter TargetName="border" Property="BorderBrush" Value="{StaticResource BorderAccentColor}"/>
                                    <Setter TargetName="border" Property="Opacity" Value="0.8"/>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <Style x:Key="TextBoxWithPlaceholder" TargetType="TextBox">
                <Setter Property="Background" Value="{StaticResource CardBackgroundColor}"/>
                <Setter Property="Foreground" Value="{StaticResource ForegroundColor}"/>
                <Setter Property="BorderBrush" Value="{StaticResource CardBorderColor}"/>
                <Setter Property="BorderThickness" Value="1"/>
                <Setter Property="Padding" Value="8,5"/>
                <Setter Property="VerticalContentAlignment" Value="Center"/>
                <Setter Property="CaretBrush" Value="{StaticResource ForegroundLightGray}"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="TextBox">
                            <Grid>
                                <Border x:Name="border" Background="{TemplateBinding Background}"
                                            BorderBrush="{TemplateBinding BorderBrush}"
                                            BorderThickness="{TemplateBinding BorderThickness}"
                                            CornerRadius="3"/>
                                <ScrollViewer x:Name="PART_ContentHost" Margin="{TemplateBinding Padding}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
                                <TextBlock Text="{Binding Tag, RelativeSource={RelativeSource TemplatedParent}}"
                                               Foreground="{StaticResource ForegroundGray}"
                                               Margin="{TemplateBinding Padding}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                               Visibility="Collapsed" x:Name="PlaceholderText" IsHitTestVisible="False"/>
                            </Grid>
                            <ControlTemplate.Triggers>
                                <MultiTrigger>
                                    <MultiTrigger.Conditions>
                                        <Condition Property="Text" Value=""/>
                                    </MultiTrigger.Conditions>
                                    <Setter Property="Visibility" TargetName="PlaceholderText" Value="Visible"/>
                                </MultiTrigger>
                                <Trigger Property="IsFocused" Value="True">
                                    <Setter Property="BorderBrush" Value="{StaticResource BorderAccentColor}"/>
                                    <Setter TargetName="border" Property="Background" Value="{StaticResource ButtonHoverBrush}"/>
                                </Trigger>
                                <Trigger Property="IsMouseOver" Value="True">
                                    <Setter Property="BorderBrush" Value="{StaticResource CardBorderColor}"/>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <Style x:Key="RadioButtonCardStyle" TargetType="RadioButton">
                <Setter Property="Foreground" Value="{StaticResource ForegroundColor}"/>
                <Setter Property="Background" Value="{StaticResource CardBackgroundColor}"/>
                <Setter Property="BorderBrush" Value="{StaticResource CardBorderColor}"/>
                <Setter Property="BorderThickness" Value="1"/>
                <Setter Property="Padding" Value="0"/>
                <Setter Property="Cursor" Value="Hand"/>
                <Setter Property="Margin" Value="4"/>
                <Setter Property="HorizontalContentAlignment" Value="Center"/>
                <Setter Property="VerticalContentAlignment" Value="Center"/>
                <Setter Property="Width" Value="95"/>
                <Setter Property="Height" Value="105"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="RadioButton">
                            <Border x:Name="border"
                                        Background="{TemplateBinding Background}"
                                        BorderBrush="{TemplateBinding BorderBrush}"
                                        BorderThickness="{TemplateBinding BorderThickness}"
                                        CornerRadius="4">
                                <ContentPresenter Margin="{TemplateBinding Padding}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                            </Border>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsChecked" Value="True">
                                    <Setter TargetName="border" Property="BorderBrush" Value="{StaticResource BorderAccentColor}"/>
                                    <Setter TargetName="border" Property="BorderThickness" Value="2"/>
                                </Trigger>
                                <Trigger Property="IsMouseOver" Value="True">
                                    <Setter TargetName="border" Property="BorderBrush" Value="{StaticResource ButtonHoverBrush}"/>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <Style x:Key="ScrollBarThumbStyle" TargetType="{x:Type Thumb}">
                <Setter Property="SnapsToDevicePixels" Value="True"/>
                <Setter Property="OverridesDefaultStyle" Value="true"/>
                <Setter Property="IsTabStop" Value="false"/>
                <Setter Property="Focusable" Value="false"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type Thumb}">
                            <Border Name="ThumbVisual" CornerRadius="3"
                                    Background="{StaticResource ScrollBarThumbBrush}"
                                    BorderBrush="Transparent" BorderThickness="0" />
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsMouseOver" Value="True">
                                    <Setter TargetName="ThumbVisual" Property="Background" Value="{StaticResource ScrollBarThumbHoverBrush}" />
                                </Trigger>
                                <Trigger Property="IsDragging" Value="True">
                                    <Setter TargetName="ThumbVisual" Property="Background" Value="{StaticResource BorderAccentColor}" />
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <Style x:Key="ScrollBarPageButtonStyle" TargetType="{x:Type RepeatButton}">
                <Setter Property="SnapsToDevicePixels" Value="True"/>
                <Setter Property="OverridesDefaultStyle" Value="true"/>
                <Setter Property="IsTabStop" Value="false"/>
                <Setter Property="Focusable" Value="false"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type RepeatButton}">
                            <Border Background="Transparent" />
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <Style TargetType="{x:Type ScrollBar}">
                <Setter Property="SnapsToDevicePixels" Value="True"/>
                <Setter Property="OverridesDefaultStyle" Value="true"/>
                <Setter Property="Width" Value="10"/>
                <Setter Property="MinWidth" Value="10"/>
                <Setter Property="Background" Value="{StaticResource ScrollBarBackgroundBrush}"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type ScrollBar}">
                            <Grid Name="Bg" SnapsToDevicePixels="true" Background="{TemplateBinding Background}">
                                <Track x:Name="PART_Track" IsDirectionReversed="true" Width="Auto" HorizontalAlignment="Stretch">
                                    <Track.DecreaseRepeatButton>
                                        <RepeatButton Style="{StaticResource ScrollBarPageButtonStyle}" Command="ScrollBar.PageUpCommand" />
                                    </Track.DecreaseRepeatButton>
                                    <Track.Thumb>
                                        <Thumb Style="{StaticResource ScrollBarThumbStyle}" Margin="2,0,2,0" />
                                    </Track.Thumb>
                                    <Track.IncreaseRepeatButton>
                                        <RepeatButton Style="{StaticResource ScrollBarPageButtonStyle}" Command="ScrollBar.PageDownCommand" />
                                    </Track.IncreaseRepeatButton>
                                </Track>
                            </Grid>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
                <Style.Triggers>
                    <Trigger Property="Orientation" Value="Horizontal">
                        <Setter Property="Width" Value="Auto"/>
                        <Setter Property="MinWidth" Value="0"/>
                        <Setter Property="Height" Value="10"/>
                        <Setter Property="MinHeight" Value="10"/>
                        <Setter Property="Template">
                            <Setter.Value>
                                <ControlTemplate TargetType="{x:Type ScrollBar}">
                                    <Grid Name="Bg" SnapsToDevicePixels="true" Background="{TemplateBinding Background}">
                                        <Track x:Name="PART_Track" IsDirectionReversed="False" Height="Auto" VerticalAlignment="Stretch">
                                            <Track.DecreaseRepeatButton>
                                                <RepeatButton Style="{StaticResource ScrollBarPageButtonStyle}" Command="ScrollBar.PageLeftCommand" />
                                            </Track.DecreaseRepeatButton>
                                            <Track.Thumb>
                                                <Thumb Style="{StaticResource ScrollBarThumbStyle}" Margin="0,2,0,2" />
                                            </Track.Thumb>
                                            <Track.IncreaseRepeatButton>
                                                <RepeatButton Style="{StaticResource ScrollBarPageButtonStyle}" Command="ScrollBar.PageRightCommand" />
                                            </Track.IncreaseRepeatButton>
                                        </Track>
                                    </Grid>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                    </Trigger>
                </Style.Triggers>
            </Style>

            <Style x:Key="NavButtonStyle" TargetType="Button">
                <Setter Property="Background" Value="Transparent"/>
                <Setter Property="BorderThickness" Value="0"/>
                <Setter Property="Foreground" Value="{StaticResource ForegroundGray}"/>
                <Setter Property="Width" Value="Auto"/>
                <Setter Property="MinWidth" Value="80"/>
                <Setter Property="Padding" Value="8,5"/>
                <Setter Property="Margin" Value="10,0"/>
                <Setter Property="Cursor" Value="Hand"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="Button">
                            <Border x:Name="border" Background="Transparent" Padding="{TemplateBinding Padding}" CornerRadius="4">
                                <StackPanel Orientation="Vertical" HorizontalAlignment="Center">
                                    <Path x:Name="iconPath" Data="{Binding Tag, RelativeSource={RelativeSource TemplatedParent}}" Fill="{TemplateBinding Foreground}" Width="22" Height="22" Stretch="Uniform" Margin="0,0,0,4"/>
                                    <TextBlock x:Name="buttonText" Text="{TemplateBinding Content}" FontSize="11" FontWeight="Normal" TextAlignment="Center"/>
                                </StackPanel>
                            </Border>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsMouseOver" Value="True">
                                    <Setter Property="Foreground" Value="{StaticResource ForegroundColor}"/>
                                    <Setter TargetName="iconPath" Property="Fill" Value="{StaticResource ForegroundColor}"/>
                                </Trigger>
                                <Trigger Property="IsPressed" Value="True">
                                    <Setter Property="Foreground" Value="{StaticResource BorderAccentColor}"/>
                                    <Setter TargetName="iconPath" Property="Fill" Value="{StaticResource BorderAccentColor}"/>
                                </Trigger>
                                <Trigger Property="IsEnabled" Value="False">
                                    <Setter Property="Opacity" Value="0.5"/>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <Style x:Key="ComboBoxToggleButton" TargetType="ToggleButton">
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="ToggleButton">
                            <Border x:Name="border" Background="Transparent" BorderBrush="Transparent" BorderThickness="0">
                                <Path x:Name="arrow" Data="M0,0 L4,4 L8,0 Z" Fill="{StaticResource ForegroundGray}" HorizontalAlignment="Right" VerticalAlignment="Center" Margin="0,0,10,0"/>
                            </Border>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsMouseOver" Value="True">
                                    <Setter TargetName="arrow" Property="Fill" Value="{StaticResource ForegroundLightGray}"/>
                                </Trigger>
                                <Trigger Property="IsChecked" Value="True">
                                    <Setter TargetName="arrow" Property="Fill" Value="{StaticResource BorderAccentColor}"/>
                                </Trigger>
                                <Trigger Property="IsEnabled" Value="False">
                                    <Setter TargetName="arrow" Property="Fill" Value="{StaticResource ButtonDisabledBrush}"/>
                                    <Setter Property="Opacity" Value="0.5"/>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <Style x:Key="ComboBoxStyle" TargetType="{x:Type ComboBox}">
                <Setter Property="Foreground" Value="{StaticResource ForegroundColor}"/>
                <Setter Property="Background" Value="{StaticResource CardBackgroundColor}"/>
                <Setter Property="BorderBrush" Value="{StaticResource CardBorderColor}"/>
                <Setter Property="BorderThickness" Value="1"/>
                <Setter Property="Padding" Value="8,5"/>
                <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Disabled"/>
                <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto"/>
                <Setter Property="SnapsToDevicePixels" Value="True"/>
                <Setter Property="VerticalContentAlignment" Value="Center"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type ComboBox}">
                            <Grid x:Name="MainGrid" SnapsToDevicePixels="true">
                                <Border x:Name="MainBorder" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="3"/>
                                <ToggleButton x:Name="ToggleButton"
                                              Style="{StaticResource ComboBoxToggleButton}"
                                              IsChecked="{Binding Path=IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"
                                              ClickMode="Press"
                                              Focusable="False"
                                              HorizontalAlignment="Stretch"
                                              VerticalAlignment="Stretch"/>
                                <ContentPresenter x:Name="ContentSite"
                                                  HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                                  IsHitTestVisible="false"
                                                  Margin="{TemplateBinding Padding}"
                                                  VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                                  Content="{TemplateBinding SelectionBoxItem}"
                                                  ContentStringFormat="{TemplateBinding SelectionBoxItemStringFormat}"
                                                  ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}"
                                                  ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}"
                                                  SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                                <Popup x:Name="PART_Popup" AllowsTransparency="true" IsOpen="{Binding Path=IsDropDownOpen, RelativeSource={RelativeSource TemplatedParent}}" PopupAnimation="{DynamicResource {x:Static SystemParameters.ComboBoxPopupAnimationKey}}" Placement="Bottom">
                                    <Grid x:Name="DropDown" SnapsToDevicePixels="True" MinWidth="{Binding Path=ActualWidth, ElementName=MainGrid}" MaxHeight="{TemplateBinding MaxDropDownHeight}">
                                        <Border x:Name="DropDownBorder" Background="{StaticResource CardBackgroundColor}" BorderThickness="1" BorderBrush="{StaticResource BorderAccentColor}" CornerRadius="3"/>
                                        <ScrollViewer x:Name="DropDownScrollViewer">
                                            <StackPanel IsItemsHost="true" KeyboardNavigation.DirectionalNavigation="Contained"/>
                                        </ScrollViewer>
                                    </Grid>
                                </Popup>
                            </Grid>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsMouseOver" Value="True">
                                    <Setter Property="BorderBrush" TargetName="MainBorder" Value="{StaticResource CardBorderColor}"/>
                                </Trigger>
                                <Trigger Property="IsDropDownOpen" Value="True">
                                    <Setter Property="BorderBrush" TargetName="MainBorder" Value="{StaticResource BorderAccentColor}"/>
                                </Trigger>
                                <Trigger Property="IsEnabled" Value="False">
                                    <Setter Property="Foreground" Value="{StaticResource ForegroundGray}"/>
                                    <Setter Property="Opacity" TargetName="MainBorder" Value="0.6"/>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <Style TargetType="{x:Type ComboBoxItem}">
                <Setter Property="SnapsToDevicePixels" Value="True"/>
                <Setter Property="Padding" Value="8,6"/>
                <Setter Property="Background" Value="Transparent"/>
                <Setter Property="BorderThickness" Value="0"/>
                <Setter Property="Foreground" Value="{StaticResource ForegroundColor}"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type ComboBoxItem}">
                            <Border x:Name="Bd" Padding="{TemplateBinding Padding}" SnapsToDevicePixels="true" Background="{TemplateBinding Background}" CornerRadius="3">
                                <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                            </Border>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsHighlighted" Value="True">
                                    <Setter TargetName="Bd" Property="Background" Value="{StaticResource BorderAccentColor}"/>
                                    <Setter Property="Foreground" Value="WhiteSmoke"/>
                                </Trigger>
                                <Trigger Property="IsEnabled" Value="False">
                                    <Setter Property="Foreground" Value="{StaticResource ForegroundGray}"/>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

        </ResourceDictionary>
    </Application.Resources>
</Application>